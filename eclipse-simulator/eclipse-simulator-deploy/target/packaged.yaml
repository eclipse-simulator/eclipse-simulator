AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Eclipse-Simulator
Parameters:
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider.
    Default: ''
    Type: String
Conditions:
  CreateOIDCProvider:
    Fn::Equals:
    - Ref: OIDCProviderArn
    - ''
Resources:
  EclipseSimulatorApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      Name: Eclipse-simulator-api
      LogConfig:
        CloudWatchLogsRoleArn:
          Fn::GetAtt:
          - EclipseSimulatorServiceRole
          - Arn
        FieldLogLevel: ALL
      UserPoolConfig:
        UserPoolId:
          Ref: EclipseSimulatorCognitoUserPool
        AwsRegion: eu-west-2
        DefaultAction: DENY
    Metadata:
      SamResourceId: EclipseSimulatorApi
  EclipseSimulatorApiSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      DefinitionS3Location: s3://test-eclipse-simulator-bucket-2/sam/eclipse-simulator-deploy/1.0-SNAPSHOT/7106a7dd6be8106f44c9a6089de4b0bc
    Metadata:
      SamResourceId: EclipseSimulatorApiSchema
  SimulationLambdaDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: SimulationLambdaDataSource
      Type: AWS_LAMBDA
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      Description: Simulation Lambda DataSource
      ServiceRoleArn:
        Fn::GetAtt:
        - EclipseSimulatorServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - SimulationFunction
          - Arn
    Metadata:
      SamResourceId: SimulationLambdaDataSource
  SimulationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Hello world function
      CodeUri: s3://test-eclipse-simulator-bucket-2/sam/eclipse-simulator-deploy/1.0-SNAPSHOT/9dd3b38e028245ef4aaeb368653bbd26
      Handler: pwr.api.handler.SimulationHandler::handleRequest
      Runtime: java11
      Timeout: 20
      Policies:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      SamResourceId: SimulationFunction
  SimulationPipelineResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      TypeName: Mutation
      FieldName: simulateFight
      RequestMappingTemplate: '$util.qr($ctx.stash.put("args", $ctx.args))

        {}

        '
      ResponseMappingTemplate: '$util.toJson($context.result)

        '
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - SimulationPipelineFunction
          - FunctionId
    Metadata:
      SamResourceId: SimulationPipelineResolver
  SimulationPipelineFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      Name: SimulationPipelineFunction
      Description: Simulation pipeline function
      DataSourceName:
        Fn::GetAtt:
        - SimulationLambdaDataSource
        - Name
      RequestMappingTemplate: "{\n    \"version\": \"2017-02-28\",\n    \"operation\"\
        : \"Invoke\",\n    \"payload\": {\n        \"attackingPlayerFleet\": $util.toJson($ctx.stash.args.attackingPlayerFleet),\n\
        \        \"defendingPlayerFleet\": $util.toJson($ctx.stash.args.defendingPlayerFleet),\n\
        \        \"repetitions\": $util.toJson($ctx.stash.args.repetitions)\n    }\n\
        }\n"
      ResponseMappingTemplate: "#foreach($error in $ctx.result.errors)\n  $util.appendError(\"\
        ${error.message}\", $error.type, \"\", $error.errorCode)\n#end\n$util.toJson($ctx.result.response)\n"
      FunctionVersion: '2018-05-29'
    Metadata:
      SamResourceId: SimulationPipelineFunction
  EclipseSimulatorServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - appsync.amazonaws.com
          Action:
          - sts:AssumeRole
    Metadata:
      SamResourceId: EclipseSimulatorServiceRole
  EclipseSimulatorLogsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for logging
      Roles:
      - Ref: EclipseSimulatorServiceRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - lambda:*
          Resource:
          - '*'
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:CreateLogGroup
          - logs:PutLogEvents
          Resource:
          - '*'
    Metadata:
      SamResourceId: EclipseSimulatorLogsPolicy
  EclipseSimulatorCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolName: eclipse-simulator-user-pool
    Metadata:
      SamResourceId: EclipseSimulatorCognitoUserPool
  EclipseSimulatorUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: EclipseSimulatorCognitoUserPool
      AllowedOAuthFlowsUserPoolClient: true
      CallbackURLs:
      - http://localhost:3000
      AllowedOAuthFlows:
      - code
      - implicit
      AllowedOAuthScopes:
      - phone
      - email
      - openid
      - profile
      SupportedIdentityProviders:
      - COGNITO
      ExplicitAuthFlows:
      - ALLOW_USER_PASSWORD_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
    Metadata:
      SamResourceId: EclipseSimulatorUserPoolClient
  EclipseSimulatorUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: eclipse-simulator-auth
      UserPoolId:
        Ref: EclipseSimulatorCognitoUserPool
    Metadata:
      SamResourceId: EclipseSimulatorUserPoolDomain
  EclipseSimulatorAdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: ADMIN
      UserPoolId:
        Ref: EclipseSimulatorCognitoUserPool
    Metadata:
      SamResourceId: EclipseSimulatorAdminUserGroup
  EclipseSimulatorCommonUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: USER
      UserPoolId:
        Ref: EclipseSimulatorCognitoUserPool
    Metadata:
      SamResourceId: EclipseSimulatorCommonUserGroup
  EclipseSimulatorDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: Simulations
      AttributeDefinitions:
      - AttributeName: attacking_fleet_hash
        AttributeType: S
      - AttributeName: defending_fleet_hash
        AttributeType: S
      KeySchema:
      - AttributeName: attacking_fleet_hash
        KeyType: HASH
      - AttributeName: defending_fleet_hash
        KeyType: RANGE
    Metadata:
      SamResourceId: EclipseSimulatorDynamoDBTable
  EclipseSimulatorDynamoDBPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: EclipseSimulatorDynamoDBPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: dynamodb:Query
          Resource:
            Fn::GetAtt:
            - EclipseSimulatorDynamoDBTable
            - Arn
        - Effect: Allow
          Action: dynamodb:PutItem
          Resource:
            Fn::GetAtt:
            - EclipseSimulatorDynamoDBTable
            - Arn
        - Effect: Allow
          Action: dynamodb:UpdateItem
          Resource:
            Fn::GetAtt:
            - EclipseSimulatorDynamoDBTable
            - Arn
      Roles:
      - Ref: EclipseSimulatorDynamoDBRole
    Metadata:
      SamResourceId: EclipseSimulatorDynamoDBPolicy
  EclipseSimulatorDynamoDBRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - dynamodb.amazonaws.com
          Action:
          - sts:AssumeRole
    Metadata:
      SamResourceId: EclipseSimulatorDynamoDBRole
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Action: sts:AssumeRoleWithWebIdentity
          Principal:
            Federated:
              Fn::If:
              - CreateOIDCProvider
              - Ref: GithubOidc
              - Ref: OIDCProviderArn
          Condition:
            StringLike:
              token.actions.githubusercontent.com:sub:
                Fn::Sub: repo:eclipse-simulator:*
    Metadata:
      SamResourceId: Role
  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
      - sts.amazonaws.com
      ThumbprintList:
      - 6938fd4d98bab03faadb97b34396831e3780aea1
    Metadata:
      SamResourceId: GithubOidc
