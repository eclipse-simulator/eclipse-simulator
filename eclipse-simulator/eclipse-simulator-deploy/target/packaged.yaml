AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Eclipse-Simulator
Parameters:
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider.
    Default: ''
    Type: String
Conditions:
  CreateOIDCProvider:
    Fn::Equals:
    - Ref: OIDCProviderArn
    - ''
Resources:
  EclipseSimulatorApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      Name: Eclipse-simulator-api
      LogConfig:
        CloudWatchLogsRoleArn:
          Fn::GetAtt:
          - EclipseSimulatorServiceRole
          - Arn
        FieldLogLevel: ALL
      UserPoolConfig:
        UserPoolId:
          Ref: EclipseSimulatorCognitoUserPool
        AwsRegion: eu-west-2
        DefaultAction: ALLOW
      AdditionalAuthenticationProviders:
      - AuthenticationType: API_KEY
    Metadata:
      SamResourceId: EclipseSimulatorApi
  EclipseSimulatorApiSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      DefinitionS3Location: s3://test-eclipse-simulator-bucket-3/sam/eclipse-simulator-deploy/1.0-SNAPSHOT/578e8f8531e210f38386c96098b223e2
    Metadata:
      SamResourceId: EclipseSimulatorApiSchema
  SimulationLambdaDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: SimulationLambdaDataSource
      Type: AWS_LAMBDA
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      Description: Simulation Lambda DataSource
      ServiceRoleArn:
        Fn::GetAtt:
        - EclipseSimulatorServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - SimulationFunction
          - Arn
    Metadata:
      SamResourceId: SimulationLambdaDataSource
  SimulationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://test-eclipse-simulator-bucket-3/sam/eclipse-simulator-deploy/1.0-SNAPSHOT/f3f1a8acdab2fc798e765a6c9e2e2d19
      Handler: pwr.api.handler.SimulationHandler::handleRequest
      Runtime: java11
      Timeout: 30
      MemorySize: 1024
      Policies:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - Ref: ESDynamoDbPolicy
    Metadata:
      SamResourceId: SimulationFunction
  SimulationPipelineResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      TypeName: Mutation
      FieldName: simulateFight
      RequestMappingTemplate: '$util.qr($ctx.stash.put("args", $ctx.args))

        {}

        '
      ResponseMappingTemplate: '$util.toJson($context.result)

        '
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - SimulationPipelineFunction
          - FunctionId
    Metadata:
      SamResourceId: SimulationPipelineResolver
  SimulationPipelineFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      Name: SimulationPipelineFunction
      Description: Simulation pipeline function
      DataSourceName:
        Fn::GetAtt:
        - SimulationLambdaDataSource
        - Name
      RequestMappingTemplate: "{\n    \"version\": \"2017-02-28\",\n    \"operation\"\
        : \"Invoke\",\n    \"payload\": {\n        \"attackingPlayerFleet\": $util.toJson($ctx.stash.args.attackingPlayerFleet),\n\
        \        \"defendingPlayerFleet\": $util.toJson($ctx.stash.args.defendingPlayerFleet),\n\
        \        \"repetitions\": $util.toJson($ctx.stash.args.repetitions)\n    }\n\
        }\n"
      ResponseMappingTemplate: "#foreach($error in $ctx.result.errors)\n  $util.appendError(\"\
        ${error.message}\", $error.type, \"\", $error.errorCode)\n#end\n$util.toJson($ctx.result.response)\n"
      FunctionVersion: '2018-05-29'
    Metadata:
      SamResourceId: SimulationPipelineFunction
  EclipseSimulatorServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - appsync.amazonaws.com
          Action:
          - sts:AssumeRole
    Metadata:
      SamResourceId: EclipseSimulatorServiceRole
  EclipseSimulatorLogsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for logging
      Roles:
      - Ref: EclipseSimulatorServiceRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - lambda:*
          Resource:
          - '*'
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:CreateLogGroup
          - logs:PutLogEvents
          Resource:
          - '*'
    Metadata:
      SamResourceId: EclipseSimulatorLogsPolicy
  EclipseSimulatorCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolName: eclipse-simulator-user-pool
    Metadata:
      SamResourceId: EclipseSimulatorCognitoUserPool
  EclipseSimulatorUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: EclipseSimulatorCognitoUserPool
      AllowedOAuthFlowsUserPoolClient: true
      CallbackURLs:
      - http://localhost:3000
      AllowedOAuthFlows:
      - code
      - implicit
      AllowedOAuthScopes:
      - phone
      - email
      - openid
      - profile
      SupportedIdentityProviders:
      - COGNITO
      ExplicitAuthFlows:
      - ALLOW_USER_PASSWORD_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
    Metadata:
      SamResourceId: EclipseSimulatorUserPoolClient
  EclipseSimulatorUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: eclipse-simulator-auth
      UserPoolId:
        Ref: EclipseSimulatorCognitoUserPool
    Metadata:
      SamResourceId: EclipseSimulatorUserPoolDomain
  EclipseSimulatorAdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: ADMIN
      UserPoolId:
        Ref: EclipseSimulatorCognitoUserPool
    Metadata:
      SamResourceId: EclipseSimulatorAdminUserGroup
  EclipseSimulatorCommonUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: USER
      UserPoolId:
        Ref: EclipseSimulatorCognitoUserPool
    Metadata:
      SamResourceId: EclipseSimulatorCommonUserGroup
  EclipseSimulatorDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: Simulations
      AttributeDefinitions:
      - AttributeName: attacking_fleet_hash
        AttributeType: S
      - AttributeName: defending_fleet_hash
        AttributeType: S
      KeySchema:
      - AttributeName: attacking_fleet_hash
        KeyType: HASH
      - AttributeName: defending_fleet_hash
        KeyType: RANGE
    Metadata:
      SamResourceId: EclipseSimulatorDynamoDBTable
  GithubRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Action: sts:AssumeRoleWithWebIdentity
          Principal:
            Federated:
              Fn::If:
              - CreateOIDCProvider
              - Ref: GithubOidc
              - Ref: OIDCProviderArn
          Condition:
            StringLike:
              token.actions.githubusercontent.com:aud: sts.amazonaws.com
    Metadata:
      SamResourceId: GithubRole
  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
      - sts.amazonaws.com
      ThumbprintList:
      - 6938fd4d98bab03faadb97b34396831e3780aea1
    Metadata:
      SamResourceId: GithubOidc
  ESAppConfig:
    Type: AWS::AppConfig::Application
    Properties:
      Name: ES
    Metadata:
      SamResourceId: ESAppConfig
  ESAppConfigEnv:
    Type: AWS::AppConfig::Environment
    Properties:
      ApplicationId:
        Ref: ESAppConfig
      Name: ESAppConfigEnv
    Metadata:
      SamResourceId: ESAppConfigEnv
  ESConfigurationProfile:
    Type: AWS::AppConfig::ConfigurationProfile
    Properties:
      ApplicationId:
        Ref: ESAppConfig
      Name: Features
      LocationUri: hosted
    Metadata:
      SamResourceId: ESConfigurationProfile
  ESFeatureFlagsConfigurationVersion:
    Type: AWS::AppConfig::HostedConfigurationVersion
    Properties:
      ApplicationId:
        Ref: ESAppConfig
      ConfigurationProfileId:
        Ref: ESConfigurationProfile
      Content:
        Fn::Sub: "{\n    \"registering\": true\n}\n"
      ContentType: application/json
      LatestVersionNumber: 1
    Metadata:
      SamResourceId: ESFeatureFlagsConfigurationVersion
  ESCustomDeploymentStrategy:
    Type: AWS::AppConfig::DeploymentStrategy
    Properties:
      Name: ESCustomDeploymentStrategy
      DeploymentDurationInMinutes: 0
      FinalBakeTimeInMinutes: 0
      GrowthFactor: 100
      GrowthType: LINEAR
      ReplicateTo: NONE
    Metadata:
      SamResourceId: ESCustomDeploymentStrategy
  ESAppConfigDeployment:
    Type: AWS::AppConfig::Deployment
    DependsOn: ESFeatureFlagsConfigurationVersion
    Properties:
      ApplicationId:
        Ref: ESAppConfig
      EnvironmentId:
        Ref: ESAppConfigEnv
      DeploymentStrategyId:
        Ref: ESCustomDeploymentStrategy
      ConfigurationProfileId:
        Ref: ESConfigurationProfile
      ConfigurationVersion: '1'
    Metadata:
      SamResourceId: ESAppConfigDeployment
  ESAppConfigIntegrationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Permissions for AppConfig usage
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - appconfig:GetLatestConfiguration
          - appconfig:StartConfigurationSession
          - appconfig:DeleteHostedConfigurationVersion
          - appconfig:ListEnvironments
          - appconfig:StartDeployment
          - appconfig:ListConfigurationProfiles
          - appconfig:ListApplications
          - appconfig:ListDeployments
          - appconfig:ListDeploymentStrategies
          - appconfig:CreateHostedConfigurationVersion
          - appconfig:ListHostedConfigurationVersions
          Resource: '*'
    Metadata:
      SamResourceId: ESAppConfigIntegrationPolicy
  FeatureFlagsLambdaDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: FeatureFlagsLambdaDataSource
      Type: AWS_LAMBDA
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      ServiceRoleArn:
        Fn::GetAtt:
        - EclipseSimulatorServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - FeatureFlagsFunction
          - Arn
    Metadata:
      SamResourceId: FeatureFlagsLambdaDataSource
  GetFeatureFlagsPipelineResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      TypeName: Query
      FieldName: getFeatureFlags
      RequestMappingTemplate: '$util.qr($ctx.stash.put("args", $ctx.args))

        $util.qr($ctx.stash.put("operation_type", "GET"))

        {}

        '
      ResponseMappingTemplate: $util.toJson($context.result)
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - FeatureFlagsPipelineFunction
          - FunctionId
    Metadata:
      SamResourceId: GetFeatureFlagsPipelineResolver
  UpdateFeatureFlagsPipelineResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      TypeName: Mutation
      FieldName: updateFeatureFlags
      RequestMappingTemplate: '$util.qr($ctx.stash.put("args", $ctx.args))

        $util.qr($ctx.stash.put("operation_type", "UPDATE"))

        {}

        '
      ResponseMappingTemplate: $util.toJson($context.result)
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - FeatureFlagsPipelineFunction
          - FunctionId
    Metadata:
      SamResourceId: UpdateFeatureFlagsPipelineResolver
  FeatureFlagsPipelineFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      Name: FeatureFlagsPipelineFunction
      Description: Update feature flags pipeline function
      DataSourceName:
        Fn::GetAtt:
        - FeatureFlagsLambdaDataSource
        - Name
      RequestMappingTemplate: "{\n    \"version\": \"2017-02-28\",\n    \"operation\"\
        : \"Invoke\",\n    \"payload\": {\n        \"featureFlags\": $util.toJson($ctx.stash.args.featureFlags),\n\
        \        \"operationType\": $util.toJson($ctx.stash.operation_type)\n    }\n\
        }\n"
      ResponseMappingTemplate: "#foreach($error in $ctx.result.errors)\n    $util.appendError(\"\
        ${error.message}\", $error.type, \"\", $error.errorCode)\n#end\n$util.toJson($ctx.result.response)\n"
      FunctionVersion: '2018-05-29'
    Metadata:
      SamResourceId: FeatureFlagsPipelineFunction
  FeatureFlagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: java11
      CodeUri: s3://test-eclipse-simulator-bucket-3/sam/eclipse-simulator-deploy/1.0-SNAPSHOT/f3f1a8acdab2fc798e765a6c9e2e2d19
      Handler: pwr.api.handler.FeatureFlagsHandler::handleRequest
      Timeout: 20
      Policies:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - Ref: ESAppConfigIntegrationPolicy
      MemorySize: 512
      Environment:
        Variables:
          APP_CONFIG_APPLICATION_ID:
            Ref: ESAppConfig
          APP_CONFIG_CONFIGURATION_PROFILE_ID:
            Ref: ESConfigurationProfile
          APP_CONFIG_ENVIRONMENT_ID:
            Ref: ESAppConfigEnv
    Metadata:
      SamResourceId: FeatureFlagsFunction
  CognitoLambdaDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: CognitoLambdaDataSource
      Type: AWS_LAMBDA
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      ServiceRoleArn:
        Fn::GetAtt:
        - EclipseSimulatorServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - CognitoFunction
          - Arn
    Metadata:
      SamResourceId: CognitoLambdaDataSource
  CognitoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://test-eclipse-simulator-bucket-3/sam/eclipse-simulator-deploy/1.0-SNAPSHOT/f3f1a8acdab2fc798e765a6c9e2e2d19
      Handler: pwr.api.handler.CognitoHandler::handleRequest
      Runtime: java11
      Timeout: 20
      Policies:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - Ref: ESCognitoDbPolicy
      - Ref: ESAppConfigIntegrationPolicy
      MemorySize: 512
      Environment:
        Variables:
          COGNITO_USER_POOL_ID:
            Ref: EclipseSimulatorCognitoUserPool
          COGNITO_USER_POOL_CLIENT_ID:
            Ref: EclipseSimulatorUserPoolClient
    Metadata:
      SamResourceId: CognitoFunction
  CognitoLoginPipelineResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      TypeName: Mutation
      FieldName: login
      RequestMappingTemplate: '$util.qr($ctx.stash.put("args", $ctx.args))

        $util.qr($ctx.stash.put("operation_type", "LOGIN"))

        {}

        '
      ResponseMappingTemplate: '$util.toJson($context.result)

        '
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - CognitoPipelineFunction
          - FunctionId
    Metadata:
      SamResourceId: CognitoLoginPipelineResolver
  CognitoRegisterPipelineResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      TypeName: Mutation
      FieldName: register
      RequestMappingTemplate: '$util.qr($ctx.stash.put("args", $ctx.args))

        $util.qr($ctx.stash.put("operation_type", "REGISTER"))

        {}

        '
      ResponseMappingTemplate: '$util.toJson($context.result)

        '
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - CognitoPipelineFunction
          - FunctionId
    Metadata:
      SamResourceId: CognitoRegisterPipelineResolver
  CognitoPipelineFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      Name: CognitoPipelineFunction
      Description: Cognito pipeline function
      DataSourceName:
        Fn::GetAtt:
        - CognitoLambdaDataSource
        - Name
      RequestMappingTemplate: "{\n    \"version\": \"2017-02-28\",\n    \"operation\"\
        : \"Invoke\",\n    \"payload\": {\n        \"credentials\": $util.toJson($ctx.stash.args.credentials),\n\
        \        \"operationType\": $util.toJson($ctx.stash.operation_type)\n    }\n\
        }\n"
      ResponseMappingTemplate: "#foreach($error in $ctx.result.errors)\n  $util.appendError(\"\
        ${error.message}\", $error.type, \"\", $error.errorCode)\n#end\n$util.toJson($ctx.result.response)\n"
      FunctionVersion: '2018-05-29'
    Metadata:
      SamResourceId: CognitoPipelineFunction
  RDSLambdaDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: RDSLambdaDataSource
      Type: AWS_LAMBDA
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      ServiceRoleArn:
        Fn::GetAtt:
        - EclipseSimulatorServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - RDSFunction
          - Arn
    Metadata:
      SamResourceId: RDSLambdaDataSource
  GetPlayersPipelineResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      TypeName: Query
      FieldName: getPlayers
      RequestMappingTemplate: '$util.qr($ctx.stash.put("args", $ctx.args))

        $util.qr($ctx.stash.put("operation_type", "GET_PLAYERS"))

        {}

        '
      ResponseMappingTemplate: $util.toJson($context.result)
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - RDSPipelineFunction
          - FunctionId
    Metadata:
      SamResourceId: GetPlayersPipelineResolver
  GetGamesPipelineResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      TypeName: Query
      FieldName: getGames
      RequestMappingTemplate: '$util.qr($ctx.stash.put("args", $ctx.args))

        $util.qr($ctx.stash.put("operation_type", "GET_GAMES"))

        {}

        '
      ResponseMappingTemplate: $util.toJson($context.result)
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - RDSPipelineFunction
          - FunctionId
    Metadata:
      SamResourceId: GetGamesPipelineResolver
  UpsertGamePipelineResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      TypeName: Mutation
      FieldName: upsertGame
      RequestMappingTemplate: '$util.qr($ctx.stash.put("args", $ctx.args))

        $util.qr($ctx.stash.put("operation_type", "UPSERT_GAME"))

        {}

        '
      ResponseMappingTemplate: $util.toJson($context.result)
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - RDSPipelineFunction
          - FunctionId
    Metadata:
      SamResourceId: UpsertGamePipelineResolver
  RDSPipelineFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - EclipseSimulatorApi
        - ApiId
      Name: RDSPipelineFunction
      Description: RDS pipeline function
      DataSourceName:
        Fn::GetAtt:
        - RDSLambdaDataSource
        - Name
      RequestMappingTemplate: "{\n    \"version\": \"2017-02-28\",\n    \"operation\"\
        : \"Invoke\",\n    \"payload\": {\n        \"gameNames\": $util.toJson($ctx.stash.args.gameNames),\n\
        \        \"playerNames\": $util.toJson($ctx.stash.args.playerNames),\n   \
        \     \"game\": $util.toJson($ctx.stash.args.game),\n        \"operationType\"\
        : $util.toJson($ctx.stash.operation_type)\n    }\n}\n"
      ResponseMappingTemplate: "#foreach($error in $ctx.result.errors)\n    $util.appendError(\"\
        ${error.message}\", $error.type, \"\", $error.errorCode)\n#end\n$util.toJson($ctx.result.response)\n"
      FunctionVersion: '2018-05-29'
    Metadata:
      SamResourceId: RDSPipelineFunction
  RDSFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: java11
      CodeUri: s3://test-eclipse-simulator-bucket-3/sam/eclipse-simulator-deploy/1.0-SNAPSHOT/f3f1a8acdab2fc798e765a6c9e2e2d19
      Handler: pwr.api.handler.RDSHandler::handleRequest
      Timeout: 30
      Policies:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - Ref: ESDynamoDbPolicy
      - Ref: RDSPolicy
      MemorySize: 2048
    Metadata:
      SamResourceId: RDSFunction
  ESDynamoDbPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:Query
          - dynamodb:Scan
          Resource:
          - '*'
    Metadata:
      SamResourceId: ESDynamoDbPolicy
  RDSPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: rds-data:*
          Resource:
          - '*'
    Metadata:
      SamResourceId: RDSPolicy
  ESCognitoDbPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:SignUp
          - cognito-idp:AdminAddUserToGroup
          - cognito-idp:AdminConfirmSignUp
          Resource:
          - '*'
    Metadata:
      SamResourceId: ESCognitoDbPolicy
