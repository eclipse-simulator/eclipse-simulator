AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Eclipse-Simulator

Parameters:
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider.
    Default: ""
    Type: String

Conditions:
  CreateOIDCProvider: !Equals
    - !Ref OIDCProviderArn
    - ""

Resources:

  EclipseSimulatorApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      Name: 'Eclipse-simulator-api'
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt EclipseSimulatorServiceRole.Arn
        FieldLogLevel: 'ALL'
      UserPoolConfig:
        UserPoolId: !Ref EclipseSimulatorCognitoUserPool
        AwsRegion: eu-west-2
        DefaultAction: DENY

  EclipseSimulatorApiSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt EclipseSimulatorApi.ApiId
      DefinitionS3Location: schema.graphql

  SimulationLambdaDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: SimulationLambdaDataSource
      Type: AWS_LAMBDA
      ApiId: !GetAtt EclipseSimulatorApi.ApiId
      Description: Simulation Lambda DataSource
      ServiceRoleArn: !GetAtt EclipseSimulatorServiceRole.Arn
      LambdaConfig:
        LambdaFunctionArn: !GetAtt SimulationFunction.Arn

  SimulationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Hello world function
      CodeUri: ../eclipse-simulator-handlers/target/lambda.jar
      Handler: pwr.api.handler.SimulationHandler::handleRequest
      Runtime: java11
      Timeout: 20
      Policies:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  SimulationPipelineResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt EclipseSimulatorApi.ApiId
      TypeName: Mutation
      FieldName: "simulateFight"
      # language=VTL
      RequestMappingTemplate: |
        $util.qr($ctx.stash.put("args", $ctx.args))
        {}
      # language=VTL
      ResponseMappingTemplate: |
        $util.toJson($context.result)
      Kind: "PIPELINE"
      PipelineConfig:
        Functions:
          - !GetAtt SimulationPipelineFunction.FunctionId

  SimulationPipelineFunction:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId: !GetAtt EclipseSimulatorApi.ApiId
      Name: "SimulationPipelineFunction"
      Description: "Simulation pipeline function"
      DataSourceName: !GetAtt SimulationLambdaDataSource.Name
      # language=VTL
      RequestMappingTemplate: |
        {
            "version": "2017-02-28",
            "operation": "Invoke",
            "payload": {
                "attackingPlayerFleet": $util.toJson($ctx.stash.args.attackingPlayerFleet),
                "defendingPlayerFleet": $util.toJson($ctx.stash.args.defendingPlayerFleet),
                "repetitions": $util.toJson($ctx.stash.args.repetitions)
            }
        }
      # language=VTL
      ResponseMappingTemplate: |
        #foreach($error in $ctx.result.errors)
          $util.appendError("${error.message}", $error.type, "", $error.errorCode)
        #end
        $util.toJson($ctx.result.response)
      FunctionVersion: "2018-05-29"

  EclipseSimulatorServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -   Effect: Allow
              Principal:
                Service:
                  - appsync.amazonaws.com
              Action:
                - sts:AssumeRole

  EclipseSimulatorLogsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for logging
      Roles:
        - !Ref EclipseSimulatorServiceRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - lambda:*
            Resource:
              - '*'
          - Effect: Allow
            Action:
              - 'logs:CreateLogStream'
              - 'logs:CreateLogGroup'
              - 'logs:PutLogEvents'
            Resource:
              - '*'

  EclipseSimulatorCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolName: 'eclipse-simulator-user-pool'

  EclipseSimulatorUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref EclipseSimulatorCognitoUserPool
      AllowedOAuthFlowsUserPoolClient: true
      CallbackURLs:
        - http://localhost:3000
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - phone
        - email
        - openid
        - profile
      SupportedIdentityProviders:
        - COGNITO
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  EclipseSimulatorUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: 'eclipse-simulator-auth'
      UserPoolId: !Ref EclipseSimulatorCognitoUserPool

  EclipseSimulatorAdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: ADMIN
      UserPoolId: !Ref EclipseSimulatorCognitoUserPool

  EclipseSimulatorCommonUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: USER
      UserPoolId: !Ref EclipseSimulatorCognitoUserPool


  EclipseSimulatorDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: Simulations
      AttributeDefinitions:
        - AttributeName: "attacking_fleet_hash"
          AttributeType: "S"
        - AttributeName: "defending_fleet_hash"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "attacking_fleet_hash"
          KeyType: "HASH"
        - AttributeName: "defending_fleet_hash"
          KeyType: "RANGE"

  EclipseSimulatorDynamoDBPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: EclipseSimulatorDynamoDBPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "dynamodb:Query"
            Resource: !GetAtt EclipseSimulatorDynamoDBTable.Arn
          - Effect: "Allow"
            Action: "dynamodb:PutItem"
            Resource: !GetAtt EclipseSimulatorDynamoDBTable.Arn
          - Effect: "Allow"
            Action: "dynamodb:UpdateItem"
            Resource: !GetAtt EclipseSimulatorDynamoDBTable.Arn
      Roles:
        - !Ref EclipseSimulatorDynamoDBRole

  EclipseSimulatorDynamoDBRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -   Effect: Allow
              Principal:
                Service:
                  - dynamodb.amazonaws.com
              Action:
                - sts:AssumeRole

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GithubOidc
                - !Ref OIDCProviderArn
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:eclipse-simulator:*

  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1